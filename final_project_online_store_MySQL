USE Online_store;


SHOW tables;


DROP TABLE IF EXISTS users;
CREATE TABLE IF NOT EXISTS users (
  id int unsigned NOT NULL AUTO_INCREMENT PRIMARY KEY,
  first_name VARCHAR (32) NOT NULL,
  last_name VARCHAR (32) NOT NULL,
  gender enum('f','m','x') NOT NULL,
  phone VARCHAR (20),
  email VARCHAR (128) NOT NULL,
  birthday_at DATETIME,
  city VARCHAR (50),
  country VARCHAR (50),
  password_hash char (65),
  created_at datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at datetime DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  INDEX fk_users_first_email_idx (email)
);


DROP TABLE IF EXISTS catalogs;
CREATE TABLE IF NOT EXISTS catalogs (
  id int UNIQUE NOT NULL AUTO_INCREMENT PRIMARY KEY, 
  name VARCHAR(245)
);


DROP TABLE IF EXISTS products;
CREATE TABLE IF NOT EXISTS products (
  id int unsigned NOT NULL AUTO_INCREMENT PRIMARY KEY,
  catalog_id int UNIQUE NOT NULL,
  name VARCHAR(245),
  desription TEXT,
  price DECIMAL(10.2),
  created_at datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at datetime DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  UNIQUE KEY index_of_catalog_id (catalog_id),
  CONSTRAINT fk_products_catalogs FOREIGN KEY (catalog_id) REFERENCES catalogs (id)
 );
  

DROP TABLE IF EXISTS orders;
CREATE TABLE orders (
  id int unsigned NOT NULL AUTO_INCREMENT PRIMARY KEY,
  user_id INT UNSIGNED NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_orders_user_id FOREIGN KEY (user_id) REFERENCES users (id)
);


DROP TABLE IF EXISTS orders_products;
CREATE TABLE orders_products (
  id int unsigned NOT NULL AUTO_INCREMENT PRIMARY KEY,
  order_id INT UNSIGNED,
  product_id INT UNSIGNED,
  total INT UNSIGNED DEFAULT 1,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  INDEX fk_orders_products_order_id_idx (order_id),
  INDEX fk_orders_products_product_id_idx (product_id),
  CONSTRAINT fk_orders_products_orders FOREIGN KEY (order_id) REFERENCES orders (id),
  CONSTRAINT fk_orders_products_products FOREIGN KEY (product_id) REFERENCES products (id)
);
  

DROP TABLE IF EXISTS storehouses;
CREATE TABLE storehouses (
  id int unsigned NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(245),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


DROP TABLE IF EXISTS storehouses_products;
CREATE TABLE storehouses_products (
  id int unsigned NOT NULL AUTO_INCREMENT PRIMARY KEY,
  storehouse_id INT UNSIGNED,
  product_id INT UNSIGNED,
  value INT UNSIGNED,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  UNIQUE KEY index_of_storehouse_id_idx (storehouse_id),
  UNIQUE KEY index_of_product_id_idx (product_id),
  CONSTRAINT fk_storehouses_products_storehouses FOREIGN KEY (storehouse_id) REFERENCES storehouses (id),
  CONSTRAINT fk_storehouses_products_products FOREIGN KEY (product_id) REFERENCES products (id)
);
